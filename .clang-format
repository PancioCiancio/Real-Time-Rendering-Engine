---
# NASA-inspired modern C++ style (based on SEL-94-003 + C++ extensions + modern best practices)
Language: Cpp
BasedOnStyle: LLVM

# === Indentation and spacing ===
IndentWidth: 4
TabWidth: 4
UseTab: Never
ContinuationIndentWidth: 4
ColumnLimit: 100   # NASA suggested ~80, but in modern C++ templates 100 is a practical balance

# === Braces ===
BraceWrapping:
  AfterClass: true
  AfterStruct: true
  AfterUnion: true
  AfterFunction: true
  AfterNamespace: true
  AfterExternBlock: true
  BeforeElse: true
  BeforeCatch: true
  BeforeWhile: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false
  IndentBraces: false

# === Spaces ===
SpacesInParentheses: false
SpaceBeforeParens: ControlStatements
SpaceBeforeRangeBasedForLoopColon: true
SpaceBeforeCtorInitializerColon: true
SpaceBeforeInheritanceColon: true

# === Pointers and references ===
PointerAlignment: Right      # int *ptr;
ReferenceAlignment: Right      # int &ref;

# === Control flow ===
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
AllowShortCaseLabelsOnASingleLine: true
BreakAfterReturnType: None
BreakBeforeBraces: Allman

# === Switch / Case ===
IndentCaseLabels: true
IndentGotoLabels: true

# === Preprocessor ===
IndentPPDirectives: AfterHash
SpaceAfterCStyleCast: true

# === Alignment ===
AlignAfterOpenBracket: DontAlign
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: true
AlignOperands: true
AlignTrailingComments: Always

# === Includes ===
SortIncludes: CaseSensitive
IncludeBlocks: Regroup

# === Modern C++ Specific ===
Cpp11BracedListStyle: true   # keeps initializer lists consistent
AllowAllParametersOfDeclarationOnNextLine: false
BreakConstructorInitializers: AfterColon
PackConstructorInitializers: Never

# === Misc ===
MaxEmptyLinesToKeep: 3
ReflowComments: Never   # NASA docs stress keeping comment formatting intentional
SpacesInAngles: Never   # no space in templates: std::vector<int>
SpaceBeforeAssignmentOperators: true
...
